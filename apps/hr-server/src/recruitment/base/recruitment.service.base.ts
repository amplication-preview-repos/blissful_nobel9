/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Recruitment as PrismaRecruitment } from "@prisma/client";

export class RecruitmentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RecruitmentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.recruitment.count(args);
  }

  async recruitments(
    args: Prisma.RecruitmentFindManyArgs
  ): Promise<PrismaRecruitment[]> {
    return this.prisma.recruitment.findMany(args);
  }
  async recruitment(
    args: Prisma.RecruitmentFindUniqueArgs
  ): Promise<PrismaRecruitment | null> {
    return this.prisma.recruitment.findUnique(args);
  }
  async createRecruitment(
    args: Prisma.RecruitmentCreateArgs
  ): Promise<PrismaRecruitment> {
    return this.prisma.recruitment.create(args);
  }
  async updateRecruitment(
    args: Prisma.RecruitmentUpdateArgs
  ): Promise<PrismaRecruitment> {
    return this.prisma.recruitment.update(args);
  }
  async deleteRecruitment(
    args: Prisma.RecruitmentDeleteArgs
  ): Promise<PrismaRecruitment> {
    return this.prisma.recruitment.delete(args);
  }
}
